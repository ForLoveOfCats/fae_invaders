import faylib::Font, Vec2
import entity_system::EntitySystem
import sprite::Textures
import user_interface::UserInterface

// This really wants a function pointer
// However Fae doesn't have those yet, so here this is
enum Scene {
	MainMenu { start: bool }
	DifficultySelector {
		one: bool
		two: bool
		three: bool
	}
	InGame { difficulty: isize }
	Lost { reason: str, ok: bool }
	Won { ok: bool }
}

method mut Scene
fn transitioned(context: &mut Context) {
	match self {
		MainMenu => scene_transitioned_main_menu(context, self.&mut)
		DifficultySelector => scene_transitioned_difficulty_selector(context, self.&mut)
		InGame => scene_transitioned_in_game(context, self.&mut)
		Lost => scene_transitioned_lost(context, self.&mut)
		Won => scene_transitioned_won(context, self.&mut)
	}
}

method mut Scene
fn tick(context: &mut Context) {
	match self {
		MainMenu => scene_main_menu(context, self.&mut)
		DifficultySelector => scene_difficulty_selector(context, self.&mut)
		InGame => scene_in_game(context, self.&mut)
		Lost => scene_lost(context, self.&mut)
		Won => scene_won(context, self.&mut)
	}

	context.user_interface.tick(context)
	context.entity_system.tick(context)
}

struct Context {
	textures: &Textures
	entity_system: &mut EntitySystem
	user_interface: &mut UserInterface
	font: Font
	scene: &mut Scene
	viewport_size: Vec2
	delta: f32
}

method mut Context
fn transition(to: Scene) {
	self.entity_system.clear()
	self.user_interface.clear()
	self.scene.* = to
	self.scene.transitioned(self)
}

fn scene_transitioned_main_menu(context: &mut Context, scene: &mut Scene::MainMenu) {
	context.user_interface.heading = "Fae Invaders"
	context.user_interface.push(.Button {
		text: "Start"
		pressed: scene.start.&mut
	})
}

fn scene_main_menu(context: &mut Context, scene: &mut Scene::MainMenu) {
	if scene.start {
		context.transition(.DifficultySelector {
			one: false
			two: false
			three: false
		})
	}
}

fn scene_transitioned_difficulty_selector(context: &mut Context, scene: &mut Scene::DifficultySelector) {
	context.user_interface.heading = "Select Difficulty"
	context.user_interface.push(.Button {
		text: "Easy"
		pressed: scene.one.&mut
	})
	context.user_interface.push(.Button {
		text: "Normal"
		pressed: scene.two.&mut
	})
	context.user_interface.push(.Button {
		text: "Hard"
		pressed: scene.three.&mut
	})
	context.user_interface.selection = 1
}

fn scene_difficulty_selector(context: &mut Context, scene: &mut Scene::DifficultySelector) {
	if scene.one => context.transition(.InGame { difficulty: 1 })
	else if scene.two => context.transition(.InGame { difficulty: 2 })
	else if scene.three => context.transition(.InGame { difficulty: 3 })
}

fn scene_transitioned_in_game(context: &mut Context, scene: &mut Scene::InGame) {
	import entities::player::Player
	import entities::enemy::Enemy, Direction

	for y_offset in 0..scene.difficulty * 2 {
		let direction: Direction = if y_offset % 2 == 0  => yield Direction.Left
		else => yield Direction.Right
		let y_offset = y_offset.(f32) * context.textures.enemy.height.(f32) * 1.6

		for x_offset in -5..6 {
			let x_offset = x_offset.(f32) * context.textures.enemy.width.(f32) * 1.55
			let position = Vec2 {
				x: context.viewport_size.x / 2 + x_offset
				y: context.textures.enemy.height.(f32) + y_offset
			}
			Enemy.spawn(context.textures, context.entity_system, position, direction)
		}
	}
	
	Player.spawn(context.textures, context.entity_system, context.viewport_size)
}

fn scene_in_game(context: &mut Context, _scene: &mut Scene::InGame) {
	if context.entity_system.player.all_dead() {
		let reason = "You Died!"
		context.transition(.Lost { reason, ok: false })
	} else if context.entity_system.enemy.all_dead() {
		context.transition(.Won { ok: false })
	}
}

fn scene_transitioned_lost(context: &mut Context, scene: &mut Scene::Lost) {
	context.user_interface.heading = scene.reason
	context.user_interface.push(.Button {
		text: "Continue"
		pressed: scene.ok.&mut
	})
}

fn scene_lost(context: &mut Context, scene: &mut Scene::Lost) {
	if scene.ok => context.transition(.MainMenu { start: false })
}

fn scene_transitioned_won(context: &mut Context, scene: &mut Scene::Won) {
	context.user_interface.heading = "You Won!"
	context.user_interface.push(.Button {
		text: "Continue"
		pressed: scene.ok.&mut
	})
}

fn scene_won(context: &mut Context, scene: &mut Scene::Won) {
	if scene.ok => context.transition(.MainMenu { start: false })
}
